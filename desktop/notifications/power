#!/bin/bash

# Example udev rule:
#  SUBSYSTEM=="power_supply", RUN+="/usr/local/bin/notify.power $env{POWER_SUPPLY_PRESENT}"

state=/tmp/.de.note.power.state
state_now=$1

debounce=2
battery=/sys/class/power_supply/BAT0
lock=/tmp/.de.note.power
lock_timeout=30
notify='notify-net -d 0.0.0.0:8158 -u critical -i nwn -n power'
test=


# Mutex
exec 4>>"$lock"
flock -n 4 || {
	# Check if lock holder pid got stuck somehow
	ts=$(printf '%(%s)T' -1)
	ts_lock=$(stat --format=%Y "$lock" 2>/dev/null || echo 0)
	[[ $(( $ts - $ts_lock )) -lt "$lock_timeout" ]] && exit || {
		rm "$lock"
		logger "BUG: removing stale but still open lock for power notifications: $lock"
	}
}
echo "$$" >"$lock"


# Change tracking
[[ -n "$test" || "$debounce" -eq 0 ]] || {
	sleep "$debounce"
	grep -qF -e Charging -e Full "$battery"/status \
		&& state_now=1 || state_now=0
}
check=x$(cat "$state" 2>/dev/null)
[[ "$check" != x"$state_now" ]] || exit
echo "$state_now" >$state


# Notification
power_div() {
	pw=$(bc <<< "scale=2; $1 / $2")
	pw=${pw#*.} pw=${pw#0}
	[[ $pw -ne 0 ]] || pw=100
	echo $pw
}

pw_full=$(< "$battery"/charge_full)
pw_left=$(cat "$battery"/charge_now)
pw_new=$(cat "$battery"/charge_full_design)

export LC_ALL=en_US.UTF8 # for printf digit groups
pw=$(power_div $pw_left $pw_full)
pw_cap=$(power_div $pw_full $pw_new)
pw_full=$(printf "%'d" $pw_full) pw_new=$(printf "%'d" $pw_new)
pw_cap_linux=$(< "$battery"/capacity) pw_cap_level=$(< "$battery"/capacity_level)

alarm=$(< "$battery"/alarm) status=$(< "$battery"/status)
$notify -s "Charger state: $status" <<EOF
Battery state: <b>${pw}%</b> (cap=$pw_cap_linux, level=$pw_cap_level, alarm=$alarm)
Battery max charge state: ${pw_cap}% ($pw_full / $pw_new)
EOF
